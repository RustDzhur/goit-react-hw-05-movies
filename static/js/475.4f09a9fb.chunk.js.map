{"version":3,"file":"static/js/475.4f09a9fb.chunk.js","mappings":"mPAEaA,EAAOC,EAAAA,GAAAA,GAAH,4JAQJC,EAAWD,EAAAA,GAAAA,GAAH,kDAIRE,EAAQF,EAAAA,GAAAA,IAAH,0C,kBC4BlB,EAlCa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAAII,MAAK,SAAAC,GAAG,OAAIN,EAAUM,EAAIC,KAAKC,KAAvB,GAC5B,GAAE,CAACP,IAECF,GAKH,SAACL,EAAD,UACGK,EAAOU,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,aAApC,OACV,UAACjB,EAAD,WACGiB,GACC,SAAChB,EAAD,CACEiB,IAAG,yCAAoCD,GACvCE,IAAKL,EACLM,QAAQ,UAGV,SAACnB,EAAD,CAAOiB,IAAKG,EAAaF,IAAKL,EAAMM,QAAQ,UAE9C,mCAAWN,MACX,uCAAeC,MACf,wCAAgBC,OAZHX,EADL,MALP,IAuBV,C","sources":["pages/cast/Cast.styled.js","pages/cast/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-evenly;\n\n`\nexport const ListItem = styled.li`\n    margin-bottom: 25px;\n`\n\nexport const Image = styled.img`\n    width: 250px\n`","import PropTypes from 'prop-types';\nimport { getMovieActors } from 'Api/Api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Image, List, ListItem } from './Cast.styled';\nimport notFoundImg from '../../images/notFoundImg.png';\n\nconst Cast = () => {\n  const [actors, setActors] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getMovieActors(id).then(res => setActors(res.data.cast));\n  }, [id]);\n\n  if (!actors) {\n    return null;\n  }\n\n  return (\n    <List>\n      {actors.map(({ id, name, character, popularity, profile_path }) => (\n        <ListItem key={id}>\n          {profile_path ? (\n            <Image\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt={name}\n              loading=\"lazy\"\n            />\n          ) : (\n            <Image src={notFoundImg} alt={name} loading=\"lazy\" />\n          )}\n          <h3>Name: {name}</h3>\n          <p>Charecter: {character}</p>\n          <p>Popularity: {popularity}</p>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  actors: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    popularity: PropTypes.number.isRequired,\n    profile_path: PropTypes.number.isRequired,\n  }),\n};\n"],"names":["List","styled","ListItem","Image","useState","actors","setActors","id","useParams","useEffect","getMovieActors","then","res","data","cast","map","name","character","popularity","profile_path","src","alt","loading","notFoundImg"],"sourceRoot":""}