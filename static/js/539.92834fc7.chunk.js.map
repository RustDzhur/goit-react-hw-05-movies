{"version":3,"file":"static/js/539.92834fc7.chunk.js","mappings":"wQAGaA,EAAaC,EAAAA,GAAAA,IAAH,sKASVC,EAASD,EAAAA,GAAAA,IAAH,0CAGNE,EAAYF,EAAAA,GAAAA,EAAH,oEAKTG,EAAaH,EAAAA,GAAAA,IAAH,+CAIVI,EAAUJ,EAAAA,GAAAA,IAAH,yFAMPK,EAAUL,EAAAA,GAAAA,IAAH,iEAKPM,GAAUN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,yT,2BC6CpB,EAhEqB,WAAO,IAAD,IACzB,GAAwCQ,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,EAAQ,oBAAGJ,EAASK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAMzC,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBC,OAAOP,IAAKQ,MAAK,SAAAC,GAAG,OAAIZ,EAAgBY,EAAIC,KAAxB,GACvC,GAAE,CAACV,KAECJ,EACH,OAAO,KAGT,IACEe,EAMEf,EANFe,MACAC,EAKEhB,EALFgB,SACAC,EAIEjB,EAJFiB,OACAC,EAGElB,EAHFkB,cACAC,EAEEnB,EAFFmB,eACAC,EACEpB,EADFoB,aAGF,OACE,gCACGpB,GAAe,UAACV,EAAD,WACb4B,GACC,SAACxB,EAAD,CACE2B,IAAG,yCAAoCH,GACvCI,IAAKH,KAGP,SAACzB,EAAD,CAAY2B,IAAKE,EAAaD,IAAKH,KAErC,4BACE,SAAC,KAAD,CAAMK,GAAIlB,EAAV,sBACA,wBAAKS,KACL,wBACE,wCAAgBK,QAElB,uBAAIJ,KACJ,4BACE,qCACA,SAACxB,EAAD,UACGyB,EAAOQ,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,KAAP,OACV,SAACjC,EAAD,UAAqBiC,GAALtB,EADN,gBAMJ,SAACuB,EAAA,QAAD,KAEhB,UAAC/B,EAAD,YACE,SAACD,EAAD,WACE,sDAEF,SAACE,EAAD,CAAS2B,GAAG,OAAZ,mBACA,SAAC3B,EAAD,CAAS2B,GAAG,UAAZ,sBACA,SAAC,KAAD,SAIP,C,wGC3EYI,EAAiBrC,EAAAA,GAAAA,IAAH,8MASdsC,EAAYtC,EAAAA,GAAAA,EAAH,yFAMTM,GAAUN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,g0C,SCNpB,EAVoB,WAClB,OACE,UAACqC,EAAD,YACE,SAACC,EAAD,8BACA,SAACA,EAAD,yBACA,SAAChC,EAAD,CAAS2B,GAAG,IAAZ,0BAGL,C","sources":["pages/detailsMovie/DetailsMovie.styled.js","pages/detailsMovie/DetailsMovie.jsx","pages/noFoundPage/NoFoundPage.styled.js","pages/noFoundPage/NoFoundPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DetailsBox = styled.div`\n  display: flex;\n  margin: 0 auto;\n  max-width: 1200px;\n  padding-bottom: 30px;\n  border-bottom: 2px solid grey;\n  margin-bottom: 15px;\n`;\n\nexport const Genres = styled.div`\n  display: flex;\n`;\nexport const GenreName = styled.p`\n  font-weight: 500;\n  margin-right: 10px;\n`;\n\nexport const ImgPreview = styled.img`\n  margin-right: 15px;\n`;\n\nexport const AddInfo = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n  margin-bottom: 25px;\n`;\n\nexport const InfoBox = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`;\n\nexport const NavItem = styled(NavLink)`\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  background-color: orange;\n  margin-right: 15px;\n  text-decoration: none;\n  font-family: sans-serif;\n  font-size: 18px;\n  color: black;\n  &.active {\n    background-color: lightgreen;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getDetailsOfMovie } from '../../Api/Api';\nimport {\n  Genres,\n  GenreName,\n  DetailsBox,\n  ImgPreview,\n  AddInfo,\n  NavItem,\n  InfoBox,\n} from './DetailsMovie.styled';\nimport notFoundImg from '../../images/notFoundImg.png';\nimport NoFoundPage from 'pages/noFoundPage/NoFoundPage';\n\nconst DetailsMovie = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const { id } = useParams();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getDetailsOfMovie(Number(id)).then(res => setMovieDetails(res.data));\n  }, [id]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  const {\n    title,\n    overview,\n    genres,\n    backdrop_path,\n    original_title,\n    vote_average,\n  } = movieDetails;\n\n  return (\n    <>\n      {movieDetails ? <DetailsBox>\n        {backdrop_path ? (\n          <ImgPreview\n            src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n            alt={original_title}\n          />\n        ) : (\n          <ImgPreview src={notFoundImg} alt={original_title} />\n        )}\n        <div>\n          <Link to={backLink}>Go Back</Link>\n          <h1>{title}</h1>\n          <p>\n            <b>Popularity: {vote_average}</b>\n          </p>\n          <p>{overview}</p>\n          <div>\n            <h2>Genres:</h2>\n            <Genres>\n              {genres.map(({ id, name }) => (\n                <GenreName key={id}>{name}</GenreName>\n              ))}\n            </Genres>\n          </div>\n        </div>\n      </DetailsBox> : <NoFoundPage/>}\n\n      <InfoBox>\n        <AddInfo>\n          <b>Additional Information:</b>\n        </AddInfo>\n        <NavItem to=\"cast\">Cast</NavItem>\n        <NavItem to=\"reviews\">Reviews</NavItem>\n        <Outlet />\n      </InfoBox>\n    </>\n  );\n};\n\nexport default DetailsMovie;\n\nDetailsMovie.propTypes ={\n  movieDetails: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.object.isRequired,\n    backdrop_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  })\n}","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const BackGroundPage = styled.div`\n  background-color: #fbab7e;\n  background-image: linear-gradient(62deg, #fbab7e 0%, #f7ce68 100%);\n  height: 100vh;\n  width: 100vw;\n  text-align: center;\n  padding-top: 150px;\n`;\n\nexport const TextError = styled.p`\n  font-size: 50px;\n  font-weight: 700;\n  margin-bottom: 30px;\n`;\n\nexport const NavItem = styled(NavLink)`\n  align-items: center;\n  appearance: none;\n  background-image: radial-gradient(\n    100% 100% at 100% 0,\n    #5adaff 0,\n    #5468ff 100%\n  );\n  border: 0;\n  border-radius: 6px;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, rgba(58, 65, 111, 0.5) 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: 'JetBrains Mono', monospace;\n  height: 48px;\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: relative;\n  text-align: left;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow, transform;\n  font-size: 18px;\n  &:focus {\n    box-shadow: #3c4fe0 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\n  }\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n  &:active {\n    box-shadow: #3c4fe0 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;","import {BackGroundPage, TextError, NavItem} from './NoFoundPage.styled'\n\nconst NoFoundPage = () => {\n  return (\n    <BackGroundPage>\n      <TextError>Page not found</TextError>\n      <TextError>ERROR 404</TextError>\n      <NavItem to=\"/\">Go to Main</NavItem>\n    </BackGroundPage>\n  );\n};\n\nexport default NoFoundPage"],"names":["DetailsBox","styled","Genres","GenreName","ImgPreview","AddInfo","InfoBox","NavItem","NavLink","useState","movieDetails","setMovieDetails","location","useLocation","id","useParams","backLink","state","from","useEffect","getDetailsOfMovie","Number","then","res","data","title","overview","genres","backdrop_path","original_title","vote_average","src","alt","notFoundImg","to","map","name","NoFoundPage","BackGroundPage","TextError"],"sourceRoot":""}